}
CreditSolidarite <- CreditSolidarite / 2
} else if (ce[i] == 1) {
CreditSolidarite <- 297+297+(699+123) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant verse ne peut pas etre inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 297 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
# disive par 2 pour un couple
}
CreditSolidarite <- CreditSolidarite / 2
}
# Reforme #1: Prime a l'emploi
# Inspirée d'une des option analysé par Clavet et al. (2013) Source : https://www.utpjournals.press/doi/abs/10.3138/CPP.39.4.491
if (inc / wage[i]>30*weeks) {
PrimeEmploi <- (inc/wage[i]-(30*weeks))*3
} else {
PrimeEmploi <- 0
}
# Reforme #2: Revenu minimum garanti
# Representation la recommandation 9 du rapport du revenu minimum garanti (2017) Source: https://www.mtess.gouv.qc.ca/grands-dossiers/revenu_min_garanti.asp
# Souces pour le montant du calcul du panier de consommation :
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1110006601
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1110022401
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1810000413
panier <- 36970.44 # panier de consommation pris pour Montreal
if (ps[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55 # 55 % du panier pour personne de moins de 65 ans
}
} else if (fm[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*1.45 # 55 % du panier pour personne de moins de 65 ans ajuste pour situtation familiale
}
} else if (c[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*1.87/2 # 55 % du panier pour personne de moins de 65 ans  ajuste pour situtation familiale, la division par deux est pour faire un estimation individuelle
}
} else if (ce[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*2.48/2 # 55 % du panier pour personne de moins de 65 ans  ajuste pour situtation familiale,  la division par deux est pour faire un estimation individuelle
}
} else if (age[i] > 10 ) {
rmg <- panier #100% du panier pour les personnes de 65 ans et plus où nous prenons pour compte qu'ils n'ont plus d'enfant à charge
} else {
rmg <- 0
}
}
if (reforme == 0) {
transferts <- TPS_TVH + PrimeTravail + AllocationTravailleur + ACE + AllocationFamille + CreditSolidarite
} else if (reforme == 1) {
transferts <- TPS_TVH + AllocationTravailleur + ACE + AllocationFamille + CreditSolidarite #+ PrimeEmploi
} else if (reforme == 2) {
transferts <- rmg
} else if (reforme == 3 ) {
transferts <- rmg #+ PrimeEmploi
}
#la variable reforme indique quel scenario utiliser. reforme = 0 est le scenario de base
reforme <- 0
transferts <- function(inc, i){
#Credit TPS-TVH
#sources des donnees :  https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/credit-impot-tps-tvh/
TPS_TVH <- 296 # montant de base
if (c[i] == 1 | ce[i] == 1 | fm[i] == 1) {
TPS_TVH <- TPS_TVH + 296 # montant si personne a charge ou monoparental
if (ce[i] == 1) {
TPS_TVH <- TPS_TVH + 155 # montant si couple a un enfant
}
}
if (ps[i] == 1) {
TPS_TVH <- TPS_TVH + min(155, max(0, 0.02*(inc-9590))) # montant pour celibataire
} else if (fm[i] == 1) {
TPS_TVH <- TPS_TVH + 155 # montant si monoparental
}
if (inc > 38507) {
TPS_TVH <- max(0, TPS_TVH - 0.05*(inc-38507)) # deduction pour haut revenu
}
if (c[i] == 1 | ce[i] == 1 ) {
TPS_TVH <- TPS_TVH / 2 # montant final divise par 2 si en couple
}
#Prime au travail maximal
# Sources des donnees : https://www.revenuquebec.ca/fr/citoyens/credits-dimpot/credits-dimpot-relatifs-a-la-prime-au-travail/
# Bonifie le revenu de travail d'un % à partir d'un seuil, puis diminue de 10% à partir d'un second seuil
if (ps[i] == 1){
if (inc > 2400 & inc < 19456){  # celibataire
PrimeTravail <- min(874, 0.105*(inc-2400)) - max(0, 0.1*(inc-10720))
} else {
PrimeTravail <- 0
}
} else if (fm[i] == 1){
if (inc > 2400 & inc < 36680){ # monoparental
PrimeTravail <- min(2496, 0.30*(inc-2400)) - max(0, 0.1*(inc-10720))
} else {
PrimeTravail <- 0
}
} else if (c[i] == 1){
if (inc > 3600 & inc < 30217){ # couple
PrimeTravail <- (min(1363, 0.105*(inc-3600)) - max(0, 0.1*(inc-16584))) / 2 # divise en 2 pour couple
} else {
PrimeTravail <- 0
}
} else if (ce[i] == 1){
if (inc > 3600 & inc < 49044){ # couple avec enfant
PrimeTravail <- (min(3246, 0.25*(inc-3600)) - max(0, 0.1*(inc-16584))) / 2 # divise en 2 pour couple
} else {
PrimeTravail <- 0
}
} # les valeurs pour 2019 ont ete utilisees
#Allocation canadienne pour les travailleurs
#Source des donnees : https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/allocation-canadienne-pour-les-travailleurs/
if (ps[i] == 1){
if (inc > 2400 & inc < 23458){ # celibataire
AllocationTravailleur <- min(2280, 0.274*(inc-2400)) - max(0, 0.2*(inc-12060))
} else {
AllocationTravailleur <- 0
}
} else if (fm[i] == 1){
if (inc > 2400 & inc < 18305){ # monoparental
AllocationTravailleur <- min(1248, 0.15*(inc-2400)) - max(0, 0.2*(inc-12065))
} else {
AllocationTravailleur <- 0
}
} else if (c[i] == 1){
if (inc > 3600 & inc < 36308){ # couple
AllocationTravailleur <- (min(3558, 0.274*(inc-3600)) - max(0, 0.2*(inc-18520))) / 2
} else {
AllocationTravailleur <- 0
}
} else if (ce[i] == 1){
if (inc > 3600 & inc < 27629){ # couple avec enfant
AllocationTravailleur <- (min(1818, 0.14*(inc-3600)) - max(0, 0.2*(inc-18540))) / 2
} else {
AllocationTravailleur <- 0
}
}
#Allocation canadienne pour enfants
# Source des donnees : https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/allocation-canadienne-enfants/
if (ce[i] == 1 | fm[i] ==1){   # Aucune distinction entre famille monoparentale et couple
if (prescolaire[i] == 1) {
ACE <- 6765 # montant plus eleve si enfant à moins de 6
} else {
ACE <- 5708 # on suppose qu'il n'y a qu'un seul enfant
}
if (inc > 31711) { # premier seul de reduction (marginal)
ACE <- ACE - 0.07*min(36997, inc - 31711) # 7% pour revenu entre 31711 et 68708
}
if (inc > 68708) { # deuxième seuil
ACE <- ACE - 0.032*(inc - 68708) # 3,2% pour revenu entre 31711 et 68708
}
ACE <- max(ACE, 0) # on s'assure que la valeur n'est pas negative
if (ce[i] == 1) {
ACE <- ACE/2 # on divise le montant pas deux pour un couple
} else {
ACE <- 0 #aucune allocation si pas d'enfant
}
#Allocation famille
# Source des donnees : https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/allocation-famille-soutien-enfants/
if (fm[i] == 1) {
AllocationFamille <- 2515 + 882 # prime de base plus prime pour monoparental
if (inc > 36256) {
AllocationFamille <- AllocationFamille - 0.04*(inc-36256) # deduction pour haut revenu
}
AllocationFamille <- max(AllocationFamille, 1352) # prime minimum
} else if (ce[i] == 1) {
AllocationFamille <- 2515 # montant de base pour un enfant
if (inc > 49842) {
AllocationFamille <- AllocationFamille - 0.04*(inc-49842) # deduction pour haut revenu
}
AllocationFamille <- max(AllocationFamille, 1000) / 2 # prime minimum, divisee par 2
} else {
AllocationFamille <- 0
}
#Credit solidarite
# Sources des donnees : http://www4.gouv.qc.ca/FR/Portail/Citoyens/Evenements/acheter-renover-maison/Pages/credit-impot-pour-solidarite.aspx  et https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/credit-impot-solidarite/
if (ps[i] == 1) {
CreditSolidarite <- 297+141+(577) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant verse ne peut pas etre inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 141 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
}
} else if (fm[i] == 1) {
CreditSolidarite <- 297+141+(577+123) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant versé ne peut pas être inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 141 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
}
} else if (c[i] == 1) {
CreditSolidarite <- 297+297+(699) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant verse ne peut pas etre inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 297 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
# divise par 2 pour un couple
}
CreditSolidarite <- CreditSolidarite / 2
} else if (ce[i] == 1) {
CreditSolidarite <- 297+297+(699+123) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant verse ne peut pas etre inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 297 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
# disive par 2 pour un couple
}
CreditSolidarite <- CreditSolidarite / 2
}
# Reforme #1: Prime a l'emploi
# Inspirée d'une des option analysé par Clavet et al. (2013) Source : https://www.utpjournals.press/doi/abs/10.3138/CPP.39.4.491
if (inc / wage[i]>30*weeks) {
PrimeEmploi <- (inc/wage[i]-(30*weeks))*3
} else {
PrimeEmploi <- 0
}
# Reforme #2: Revenu minimum garanti
# Representation la recommandation 9 du rapport du revenu minimum garanti (2017) Source : https://www.mtess.gouv.qc.ca/grands-dossiers/revenu_min_garanti.asp
# Souces pour le montant du calcul du panier de consommation :
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1110006601
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1110022401
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1810000413
panier <- 36970.44 # panier de consommation pris pour Montreal
if (ps[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55 # 55 % du panier pour personne de moins de 65 ans
}
} else if (fm[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*1.45 # 55 % du panier pour personne de moins de 65 ans ajuste pour situtation familiale
}
} else if (c[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*1.87/2 # 55 % du panier pour personne de moins de 65 ans  ajuste pour situtation familiale, la division par deux est pour faire un estimation individuelle
}
} else if (ce[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*2.48/2 # 55 % du panier pour personne de moins de 65 ans  ajuste pour situtation familiale,  la division par deux est pour faire un estimation individuelle
}
} else if (age[i] > 10 ) {
rmg <- panier #100% du panier pour les personnes de 65 ans et plus où nous prenons pour compte qu'ils n'ont plus d'enfant à charge
} else {
rmg <- 0
}
}
if (reforme == 0) {
transferts <- TPS_TVH + PrimeTravail + AllocationTravailleur + ACE + AllocationFamille + CreditSolidarite
} else if (reforme == 1) {
transferts <- TPS_TVH + AllocationTravailleur + ACE + AllocationFamille + CreditSolidarite #+ PrimeEmploi
} else if (reforme == 2) {
transferts <- rmg
} else if (reforme == 3 ) {
transferts <- rmg #+ PrimeEmploi
}
return(transferts)
}
# posons l'aide sociale à 1 (0 si elle n'existe pas)
as<-1
itax <- function(inc,i){
# Calcule les impots sur le revenu
if (inc<=f1){
prv <- 0
fed <- 0
}
if (inc>f1 & inc<=p1){
prv <- 0
fed <- pt1*(inc-f1)
}
if (inc>p1 & inc<=p2){
prv <- pp1*(inc-p1)
fed <- pt1*(inc-f1)
}
else if (inc>p2 & inc<=f2){
prv <- pp1*(p2-p1) + pp2*(inc-p2)
fed <- pt1*(inc-f1)
}
else if (inc>f2 & inc<=p3){
prv <- pp1*(p2-p1) + pp2*(inc-p2)
fed <- pt1*(f2-f1) + pt2*(inc-f2)
}
else if (inc>p3 & inc<=f3){
prv <- pp1*(p2-p1) + pp2*(p3-p2) + pp3*(inc-p3)
fed <- pt1*(f2-f1) + pt2*(inc-f2)
}
else if (inc>f3 & inc<=p4){
prv <- pp1*(p2-p1) + pp2*(p3-p2) + pp3*(inc-p3)
fed <- pt1*(f2-f1) + pt2*(f3-f2) + pt3*(inc-f3)
}
else if (inc>p4 & inc<=f4){
prv <- pp1*(p2-p1) + pp2*(p3-p2) + pp3*(p4-p3) + pp4*(inc-p4)
fed <- pt1*(f2-f1) + pt2*(f3-f2) + pt3*(inc-f3)
}
else if (inc>f4 & inc<=f5){
prv <- pp1*(p2-p1) + pp2*(p3-p2) + pp3*(p4-p3) + pp4*(inc-p4)
fed <- pt1*(f2-f1) + pt2*(f3-f2) + pt3*(f4-f3) + pt4*(inc-f4)
}
else if (inc>f5){
prv <- pp1*(p2-p1) + pp2*(p3-p2) + pp3*(p4-p3) + pp4*(inc-p4)
fed <- pt1*(f2-f1) + pt2*(f3-f2) + pt3*(f4-f3) + pt4*(f5-f4) + pt5*(inc-f5)
}
aemploi <- min(54200,inc)*0.012
rrq <- 0 #max(min(58700,inc)-3500,0)*0.057
rqap <- min(78500,inc)*0.00494
asociale <- max(690*12 - max(inc-200*12,0),0)*as
tax <-  prv + fed + aemploi + rrq + rqap - asociale -transferts(inc,i)
return(c(tax,prv,fed,aemploi,rrq,rqap,asociale, transferts(inc,i)
))
}
tme <- function(incr,imax,i){
# calcule les taux marginaux effectifs d'imposition par increments de "incr"$, jusqu'a imax$
incm <- seq(0,imax,by=incr) # vecteur des niveaux de revenus
tax <- sapply(incm,function(x) itax(x,i)[1]) # applique la taxe sur chaque niveau de revenu
tax2 <- c(tax[2:(length(tax))],0) # decale le taux de taxe
deltatax <- tax2-tax # taxe marginale
tm <- deltatax/incr # taux marginal effectif
plot(incm[1:length(incm)-1],tm[1:length(incm)-1],xlab='Revenu annuel', ylab='TMEI')
return(list(incm[1:length(incm)-1],tm[1:length(incm)-1]))
}
# graphique des TMEI par type de menage, suppose des enfants <6 ans
ps<- c(1,0,0,0)
c <-  c(0,1,0,0)
fm <- c(0,0,1,0)
ce <- c(0,0,0,1)
prescolaire <- c(0,0,1,1)
for (i in 1:4) {
tme(100,250000,i)
}
#la variable reforme indique quel scenario utiliser. reforme = 0 est le scenario de base
reforme <- 0
transferts <- function(inc, i){
#Credit TPS-TVH
#sources des donnees :  https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/credit-impot-tps-tvh/
TPS_TVH <- 296 # montant de base
if (c[i] == 1 | ce[i] == 1 | fm[i] == 1) {
TPS_TVH <- TPS_TVH + 296 # montant si personne a charge ou monoparental
if (ce[i] == 1) {
TPS_TVH <- TPS_TVH + 155 # montant si couple a un enfant
}
}
if (ps[i] == 1) {
TPS_TVH <- TPS_TVH + min(155, max(0, 0.02*(inc-9590))) # montant pour celibataire
} else if (fm[i] == 1) {
TPS_TVH <- TPS_TVH + 155 # montant si monoparental
}
if (inc > 38507) {
TPS_TVH <- max(0, TPS_TVH - 0.05*(inc-38507)) # deduction pour haut revenu
}
if (c[i] == 1 | ce[i] == 1 ) {
TPS_TVH <- TPS_TVH / 2 # montant final divise par 2 si en couple
}
#Prime au travail maximal
# Sources des donnees : https://www.revenuquebec.ca/fr/citoyens/credits-dimpot/credits-dimpot-relatifs-a-la-prime-au-travail/
# Bonifie le revenu de travail d'un % à partir d'un seuil, puis diminue de 10% à partir d'un second seuil
if (ps[i] == 1){
if (inc > 2400 & inc < 19456){  # celibataire
PrimeTravail <- min(874, 0.105*(inc-2400)) - max(0, 0.1*(inc-10720))
} else {
PrimeTravail <- 0
}
} else if (fm[i] == 1){
if (inc > 2400 & inc < 36680){ # monoparental
PrimeTravail <- min(2496, 0.30*(inc-2400)) - max(0, 0.1*(inc-10720))
} else {
PrimeTravail <- 0
}
} else if (c[i] == 1){
if (inc > 3600 & inc < 30217){ # couple
PrimeTravail <- (min(1363, 0.105*(inc-3600)) - max(0, 0.1*(inc-16584))) / 2 # divise en 2 pour couple
} else {
PrimeTravail <- 0
}
} else if (ce[i] == 1){
if (inc > 3600 & inc < 49044){ # couple avec enfant
PrimeTravail <- (min(3246, 0.25*(inc-3600)) - max(0, 0.1*(inc-16584))) / 2 # divise en 2 pour couple
} else {
PrimeTravail <- 0
}
} # les valeurs pour 2019 ont ete utilisees
#Allocation canadienne pour les travailleurs
#Source des donnees : https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/allocation-canadienne-pour-les-travailleurs/
if (ps[i] == 1){
if (inc > 2400 & inc < 23458){ # celibataire
AllocationTravailleur <- min(2280, 0.274*(inc-2400)) - max(0, 0.2*(inc-12060))
} else {
AllocationTravailleur <- 0
}
} else if (fm[i] == 1){
if (inc > 2400 & inc < 18305){ # monoparental
AllocationTravailleur <- min(1248, 0.15*(inc-2400)) - max(0, 0.2*(inc-12065))
} else {
AllocationTravailleur <- 0
}
} else if (c[i] == 1){
if (inc > 3600 & inc < 36308){ # couple
AllocationTravailleur <- (min(3558, 0.274*(inc-3600)) - max(0, 0.2*(inc-18520))) / 2
} else {
AllocationTravailleur <- 0
}
} else if (ce[i] == 1){
if (inc > 3600 & inc < 27629){ # couple avec enfant
AllocationTravailleur <- (min(1818, 0.14*(inc-3600)) - max(0, 0.2*(inc-18540))) / 2
} else {
AllocationTravailleur <- 0
}
}
#Allocation canadienne pour enfants
# Source des donnees : https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/allocation-canadienne-enfants/
if (ce[i] == 1 | fm[i] ==1){   # Aucune distinction entre famille monoparentale et couple
if (prescolaire[i] == 1) {
ACE <- 6765 # montant plus eleve si enfant à moins de 6
} else {
ACE <- 5708 # on suppose qu'il n'y a qu'un seul enfant
}
if (inc > 31711) { # premier seul de reduction (marginal)
ACE <- ACE - 0.07*min(36997, inc - 31711) # 7% pour revenu entre 31711 et 68708
}
if (inc > 68708) { # deuxième seuil
ACE <- ACE - 0.032*(inc - 68708) # 3,2% pour revenu entre 31711 et 68708
}
ACE <- max(ACE, 0) # on s'assure que la valeur n'est pas negative
if (ce[i] == 1) {
ACE <- ACE/2 # on divise le montant pas deux pour un couple
}
} else {
ACE <- 0 #aucune allocation si pas d'enfant
}
#Allocation famille
# Source des donnees : https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/allocation-famille-soutien-enfants/
if (fm[i] == 1) {
AllocationFamille <- 2515 + 882 # prime de base plus prime pour monoparental
if (inc > 36256) {
AllocationFamille <- AllocationFamille - 0.04*(inc-36256) # deduction pour haut revenu
}
AllocationFamille <- max(AllocationFamille, 1352) # prime minimum
} else if (ce[i] == 1) {
AllocationFamille <- 2515 # montant de base pour un enfant
if (inc > 49842) {
AllocationFamille <- AllocationFamille - 0.04*(inc-49842) # deduction pour haut revenu
}
AllocationFamille <- max(AllocationFamille, 1000) / 2 # prime minimum, divisee par 2
} else {
AllocationFamille <- 0
}
#Credit solidarite
# Sources des donnees : http://www4.gouv.qc.ca/FR/Portail/Citoyens/Evenements/acheter-renover-maison/Pages/credit-impot-pour-solidarite.aspx  et https://cffp.recherche.usherbrooke.ca/outils-ressources/guide-mesures-fiscales/credit-impot-solidarite/
if (ps[i] == 1) {
CreditSolidarite <- 297+141+(577) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant verse ne peut pas etre inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 141 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
}
} else if (fm[i] == 1) {
CreditSolidarite <- 297+141+(577+123) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant versé ne peut pas être inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 141 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
}
} else if (c[i] == 1) {
CreditSolidarite <- 297+297+(699) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant verse ne peut pas etre inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 297 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
# divise par 2 pour un couple
}
CreditSolidarite <- CreditSolidarite / 2
} else if (ce[i] == 1) {
CreditSolidarite <- 297+297+(699+123) # montant de base
if (inc > 35400) { # deduction pour revenu eleve
# montant verse ne peut pas etre inferieur à 0 ou au montant de la composante TVQ
CreditSolidarite <- max(0, 297 + 297 - 0.03*(inc-35400),  CreditSolidarite - 0.06*(inc-35400))
# disive par 2 pour un couple
}
CreditSolidarite <- CreditSolidarite / 2
}
# Reforme #1: Prime a l'emploi
# Inspirée d'une des option analysé par Clavet et al. (2013) Source : https://www.utpjournals.press/doi/abs/10.3138/CPP.39.4.491
if (inc / wage[i]>30*weeks) {
PrimeEmploi <- (inc/wage[i]-(30*weeks))*3
} else {
PrimeEmploi <- 0
}
# Reforme #2: Revenu minimum garanti
# Representation la recommandation 9 du rapport du revenu minimum garanti (2017) Source : https://www.mtess.gouv.qc.ca/grands-dossiers/revenu_min_garanti.asp
# Souces pour le montant du calcul du panier de consommation :
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1110006601
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1110022401
# https://www150.statcan.gc.ca/t1/tbl1/fr/tv.action?pid=1810000413
panier <- 36970.44 # panier de consommation pris pour Montreal
if (ps[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55 # 55 % du panier pour personne de moins de 65 ans
}
} else if (fm[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*1.45 # 55 % du panier pour personne de moins de 65 ans ajuste pour situtation familiale
}
} else if (c[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*1.87/2 # 55 % du panier pour personne de moins de 65 ans  ajuste pour situtation familiale, la division par deux est pour faire un estimation individuelle
}
} else if (ce[i] == 1) {
if (age[i] > 1 & age[i] < 11) {
rmg <- panier*0.55*2.48/2 # 55 % du panier pour personne de moins de 65 ans  ajuste pour situtation familiale,  la division par deux est pour faire un estimation individuelle
}
} else if (age[i] > 10 ) {
rmg <- panier #100% du panier pour les personnes de 65 ans et plus où nous prenons pour compte qu'ils n'ont plus d'enfant à charge
} else {
rmg <- 0
}
}
if (reforme == 0) {
transferts <- TPS_TVH + PrimeTravail + AllocationTravailleur + ACE + AllocationFamille + CreditSolidarite
} else if (reforme == 1) {
transferts <- TPS_TVH + AllocationTravailleur + ACE + AllocationFamille + CreditSolidarite #+ PrimeEmploi
} else if (reforme == 2) {
transferts <- rmg
} else if (reforme == 3 ) {
transferts <- rmg #+ PrimeEmploi
}
