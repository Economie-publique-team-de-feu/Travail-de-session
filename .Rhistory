missingweight <- c(lfsqc[!complete.cases(lfsqc),"FINALWT"])[[1]] #Garde les poids des individus qui seront enlevés
lfsqc <- lfsqc[complete.cases(lfsqc), ] # Enlève les observations avec des variables manquantes
lfsqc <- lfsqc[sample(1:nrow(lfsqc), 1000, replace=FALSE),] # Sous-échantillonage pour les tests (à commenter pour l'analyse finale)
n <- nrow(lfsqc) # Nombre d'individus dans la base
# Ajustement des poids des individus
corfact <- sum(lfsqc$FINALWT)/(sum(lfsqc$FINALWT)+sum(missingweight))
wght <- as.numeric(lfsqc$FINALWT)/corfact # Calcule les poids approximatifs (les val. manquantes sont parfaitement aléatoires)
# Créer des vecteurs de variables
wage <- as.numeric(lfsqc$HRLYEARN) # salaire horaire
age <- as.numeric(lfsqc$AGE_12) # âge regroupé en tranches de 5 ans de 15-19 ans(1) a >70 (12)
sexe <- ifelse(lfsqc$SEX == 1, 1, 0) # Code les femmes = 1, hommes =0
prescolaire <- ifelse(lfsqc$AGYOWNK == 1, 1, 0) # enfant le plus jeune <6 ans, 1= oui, 0=non
educ <- as.numeric(lfsqc$EDUC) #niveau d'éducation
#Type de ménage
#Personnes seules
ps<-ifelse(lfsqc$EFAMTYPE %in% c(1,15,17,18), 1,0)
#Couples sans enfants
c <- ifelse(lfsqc$EFAMTYPE %in% c(2,4,5,7,8,10,11,13), 1,0)
#Familles monoparentales
fm <- ifelse(lfsqc$EFAMTYPE %in% c(14,16), 1,0)
#Couples avec enfants (<18 ans)
ce <- ifelse(lfsqc$EFAMTYPE %in% c(3,6,9,12), 1,0)
#Matrice de covariables en ajoutant une constante de 1
constante <- rep(1,n)
Xmat <- as.data.frame( cbind(constante,age, sexe, educ,prescolaire, ps, c, fm, ce ))
# résumé des variables démographiques
summary(Xmat)
hist(wage,
main="Distribution des salaires",
xlab="Salaire horaire - Dollars canadiens")
hist(lfsqc$ATOTHRS,
main="Distribution des heures travaillées",
xlab="Nombre d'heures hebdomadaires")
weeks <- 50
#nombre d'heures par année
rhours <- as.numeric(lfsqc$ATOTHRS)*weeks
salnet<- rep(n,0)
for (j in 1:n) {
salnet[j] <- Y(j, rhours[j])
}
hist(salnet,
main="Distribution du salaire net annuel",
xlab="Salaire net annuel ($)")
Lmax <- 4250
weeks <- 50
lincr <- 250
nincr <- Lmax/lincr +1
nsim <- 10
erreurA <- matrix(rnorm(n*nsim,0,0.01), nsim, n)
erreurU <- replicate(n, matrix(rnorm((nincr)*nsim,0,1), nrow=nincr, ncol=nsim))
# le terme erreurU sera multiplié par l'écart-type des heures travaillées tel que sa variance sera égale à l'écart type au carré.
alphahat<- function(i,theta, sim){
alphahat <- as.numeric(alpha1(i, theta)) + (erreurA[sim,i])
return(alphahat)
}
uhat <- function(i, L, theta, sim){
uhat <- alphahat(i,theta, sim)*log(Lmax-L)+ theta[7]*log((Lmax-L)^2)
+theta[8]*log(Y(i,L)) + theta[9]*log((Y(i,L))^2)+ theta[10]*as.numeric(L==0)
+theta[11]*as.numeric((L>=1750 & L<=2000))
return( uhat)
}
umarghat <- function(i,theta, sim){
# calcule l'utilite marginale de l'individu i par increments de incr heures de travail
lsup <- seq(0,Lmax,by=lincr) # vecteur des heures travaillees
util <- sapply(lsup,function(x) uhat(i,x,theta,sim))+ exp(as.numeric(erreurU[,sim,i])*theta[12])
return(list(lsup,util))
}
#nombre d'heures optimales
Lhat <- function(i, theta, sim){
#vecteur des utilites pour chaque heure de travail
u <- as.numeric(umarghat(i, theta, sim)[[2]])
lsup <- as.numeric(umarghat(i,theta,sim)[[1]])
# heures minimales travailles qui maximisent l'utilite
position <- which(u==max(u)) #utilite maximale
h<-min(lsup[position])
return(h)
}
rhours <- as.numeric(lfsqc$ATOTHRS)*weeks # nombre d'heures annuelles sur une base de 'weeks' semaines de travail
wrhours <- rhours*wght # heures annuelles x poids individuels
#Matrice des caractéristiques individuelles
Xmat<-Xmat[,1:5]
k<-ncol(Xmat)
#ecart-type des heures ponderees
rwse <-  sqrt((sum(wght*(rhours^2))/sum(wght))-(sum(wrhours)/sum(wght))^2)
rmoments <- c(colSums(matrix(rep(wrhours,k),n,k)*Xmat)/sum(wght),rwse,sum(as.numeric(rhours>=1750 & rhours<=2000)*wght)/sum(wght),sum(as.numeric(rhours==0)*wght)/sum(wght)) # calcul des moments
print(rmoments)
simhours <- function(theta){
moments <- rep(0,8) # vecteur de zéros qui va contenir la moyenne des moments simulés
for (sim in 1:nsim){
hours <- as.numeric(sapply(1:n,function(i) Lhat(i,theta,sim)))
wh <- wght*hours
swse <-  sqrt((sum(wght*(hours^2))/sum(wght))-(sum(wh)/sum(wght))^2)
moments <- moments + c(colSums(matrix(rep(wh,k),n,k)*Xmat)/sum(wght),swse,sum(as.numeric(hours>=1750&hours<=2000)*wght)/sum(wght),sum(as.numeric(hours==0)*wght)/sum(wght)) # calcul des moments
}
moments <- moments/nsim # fait la moyenne
return(moments)
}
distrhours <- function(theta){
moments <- simhours(theta) # moments simulés
gmm <- sum((moments-rmoments)^2) # distance entre les moments simulés et les moments dans les données
return(gmm)
}
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   3.868968 ,  4.478026)
print(thetamagique)
print(simhours(thetamagique))
print(rmoments)
hist(rhours)
print(max(rhours))
View(Lhat)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(1, thetamagique, 1)
}
hist(whsim)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
View(Utilite)
View(Utilite)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  2.952846,   4.868968 ,  4.478026)
print(thetamagique)
print(simhours(thetamagique))
print(rmoments)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  1.952846,   5.868968 ,  4.478026)
print(thetamagique)
print(simhours(thetamagique))
print(rmoments)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  1.952846,   5.868968 ,  3.478026)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  1.952846,   5.868968 ,  3.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.952846,   6.868968 ,  1.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
View(uhat)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.952846,   16.868968 ,  1.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   3.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   3.868968 ,  1.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.952846,   3.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.952846,   13.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 2)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  2.360434 , -2.471970 ,  0.952846,   13.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 2)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  9.360434 , -2.471970 ,  0.952846,   13.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 2)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.0952846,   13.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 2)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   3.868968 ,  3.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   3.868968 ,  5.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   13.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   33.868968 ,  4.478026)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   33.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   63.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   93.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.952846,   93.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.952846,   193.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.0952846,   193.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (14.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.0952846,   193.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (84.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.0952846,   193.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (84.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.0952846,   593.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
thetamagique <- c (84.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  0.0952846,   993.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
alphahat<- function(i,theta, sim){
alphahat <- as.numeric(alpha1(i, theta)) + (erreurA[sim,i])
return(alphahat)
}
uhat <- function(i, L, theta, sim){
uhat <- alphahat(i,theta, sim)*log(Lmax-L)+ theta[7]*log((Lmax-L)^2)
+theta[8]*log(Y(i,L)) + theta[9]*log((Y(i,L))^2)+ theta[10]*as.numeric(L==0)
+theta[11]*as.numeric((L>=1750 & L<=2000))
return( uhat)
}
umarghat <- function(i,theta, sim){
# calcule l'utilite marginale de l'individu i par increments de incr heures de travail
lsup <- seq(0,Lmax,by=lincr) # vecteur des heures travaillees
util <- sapply(lsup,function(x) uhat(i,x,theta,sim))+ exp(as.numeric(erreurU[,sim,i])*theta[12])
return(list(lsup,util))
}
#nombre d'heures optimales
Lhat <- function(i, theta, sim){
#vecteur des utilites pour chaque heure de travail
u <- as.numeric(umarghat(i, theta, sim)[[2]])
lsup <- as.numeric(umarghat(i,theta,sim)[[1]])
# heures minimales travailles qui maximisent l'utilite
position <- which(u==max(u,na.rm=T)) #utilite maximale
h<-min(lsup[position])
return(h)
}
thetatry <- c(102, -59,  8,  0.5,  120,  5, 1, 4, 0.01, 5, 2, 10)
#gmm de depart
#distrhours(thetatry)
#Calibration - ne pas rouler, ca prend 16 h....
#out <- optim(thetatry, fn=distrhours) # minimise la fonction gmmfct prenant theta comme valeur de départ.
# thetatry <- out$par
# print(out)
#Parametres estimes par la calibration
thetamagique <- c (104.318386, -54.445962, 12.287784 ,  2.450735 ,118.574461  , 9.823539,
7.478973 ,  1.360434 , -2.471970 ,  3.952846,   3.868968 ,  4.478026)
whsim <- rep(0,n)
for (i in 1:n){
whsim[i]<-Lhat(i, thetamagique, 1)
}
hist(whsim)
